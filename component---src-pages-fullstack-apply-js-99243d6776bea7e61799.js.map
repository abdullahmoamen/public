{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/fullstackApply.js"],"names":["schema","yup","shape","name","required","min","email","msg","file","test","value","type","size","useForm","resolver","yupResolver","register","errors","handleSubmit","formState","title","className","to","action","data-netlify","htmlFor","id","style","color","message","select","as","custom","width","placeholder"],"mappings":"wOAWMA,EAASC,OAAaC,MAAM,CAChCC,KAAMF,OAAaG,SAAS,oBAAoBC,IAAI,GACpDC,MAAOL,OAAaK,QAAQF,SAAS,qBACrCG,IAAKN,OAAaG,SAAS,8BAA8BC,IAAI,GAE7DG,KAAMP,OAEHG,SAAS,8BACTK,KAAK,OAAQ,iDAAiD,SAAAC,GAC7D,OACGA,GAA2B,oBAAlBA,EAAM,GAAGC,MAClBD,GAEG,4EADFA,EAAM,GAAGC,QAIdF,KAAK,WAAY,yBAAyB,SAAAC,GACzC,OAAOA,GAASA,EAAM,GAAGE,MAAQ,SAiJvC,UA9IgB,WAAO,IAAD,UACpB,GAIIC,QAAQ,CACVC,UAAUC,OAAYf,KAJtBgB,EADF,EACEA,SAEaC,GAHf,EAEEC,aAFF,EAGEC,UAAaF,QAMf,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKG,MAAM,YACX,wBAAMC,UAAU,QACd,2BAASA,UAAU,gBACjB,2BAASA,UAAU,gBACjB,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,SAAf,uBACA,uBAAKA,UAAU,QACb,gBAAC,MAAD,OAGF,uBAAKA,UAAU,YACb,sTAOA,0BAAQA,UAAU,SAChB,wBAAMA,UAAU,QAAhB,aACA,wBAAMA,UAAU,SAAhB,iBAEF,gBAAC,KAAD,CAAMC,GAAG,mBAAmBD,UAAU,QAAtC,gBAMN,+BACE,wBACEA,UAAU,oBAOVE,OAAO,OACPC,eAAa,QAEb,uBAAKH,UAAU,YACb,yBAAOI,QAAQ,QAAf,aACA,uCACErB,UAAQ,EACRO,KAAK,OACLR,KAAK,OACLuB,GAAG,QACCV,EAAS,UAEf,qBAAGW,MAAO,CAAEC,MAAO,QAAnB,UAA6BX,EAAOd,YAApC,aAA6B,EAAa0B,UAE5C,uBAAKR,UAAU,YACb,yBAAOI,QAAQ,SAAf,cACA,uCACErB,UAAQ,EACRO,KAAK,QACLR,KAAK,QACLuB,GAAG,SACCV,EAAS,WAEf,qBAAGW,MAAO,CAAEC,MAAO,QAAnB,UAA6BX,EAAOX,aAApC,aAA6B,EAAcuB,UAG7C,uBAAKR,UAAU,YACb,yBAAOI,QAAQ,QAAf,kBACA,uCACErB,UAAQ,EACRO,KAAK,OACLR,KAAK,OACLuB,GAAG,QACCV,EAAS,QALf,CAMEI,MAAM,mBAER,qBAAGO,MAAO,CAAEC,MAAO,QAAnB,UAA6BX,EAAOT,YAApC,aAA6B,EAAaqB,UAE5C,uBAAKR,UAAU,aACf,uBAAKA,UAAU,YACb,gBAAC,IAAaL,EAAS,WACvB,qBAAGW,MAAO,CAAEC,MAAO,QAAnB,UAA6BX,EAAOa,cAApC,aAA6B,EAAeD,UAE9C,uBAAKR,UAAU,YACb,oEACA,0BACEU,GAAG,SACHC,QAAM,EACNL,MAAO,CAAEM,MAAO,QAChB9B,KAAK,uBAEL,0CACA,8CACA,0CAGJ,uBAAKkB,UAAU,YACb,sDACA,0BACEU,GAAG,SACHC,QAAM,EACNL,MAAO,CAAEM,MAAO,QAChB9B,KAAK,uBAEL,mCACA,mCACA,mCACA,mCACA,qCAIJ,uBAAKkB,UAAU,YACb,yBAAOI,QAAQ,WAAf,0BACA,0CACES,YAAY,yBACZ/B,KAAK,UACLuB,GAAG,WACCV,EAAS,SAEf,qBAAGW,MAAO,CAAEC,MAAO,QAAnB,UAA6BX,EAAOV,WAApC,aAA6B,EAAYsB,UAE3C,0BAAQlB,KAAK,SAASU,UAAU,aAAhC","file":"component---src-pages-fullstack-apply-js-99243d6776bea7e61799.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\nimport \"./styles/contact.css\"\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport * as yup from \"yup\"\nimport Selector from \"../components/select\"\nimport { FaCode } from \"react-icons/fa\"\nimport { Link } from \"gatsby\"\n\nconst schema = yup.object().shape({\n  name: yup.string().required(\"name is required\").min(3),\n  email: yup.string().email().required(\"email is required\"),\n  msg: yup.string().required(\"you must provide a message\").min(6),\n  //   select: yup.string().required(\"you must enter your skills !\"),\n  file: yup\n    .mixed()\n    .required(\"you need to provide a file\")\n    .test(\"type\", \"you must provide a file eg: ex.pdf or ex.docx\", value => {\n      return (\n        (value && value[0].type === \"application/pdf\") ||\n        (value &&\n          value[0].type ===\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n      )\n    })\n    .test(\"fileSize\", \"The file is too large\", value => {\n      return value && value[0].size <= 2000000\n    }),\n})\nconst Contact = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  })\n  const onSubmit = data => alert(JSON.stringify(data))\n\n  return (\n    <Layout>\n      <Seo title=\"Contact\" />\n      <main className=\"page\">\n        <section className=\"contact-page\">\n          <article className=\"contact-info\">\n            <div className=\"card jobApply\">\n              <div className=\"title\">FullStack developer</div>\n              <div className=\"icon\">\n                <FaCode />\n              </div>\n\n              <div className=\"features\">\n                <p>\n                  Build clean, responsive and performant user interfaces for\n                  challenging applications. Collaborate with different team\n                  member including manager, frontend developer, backend\n                  developers and UI/UX expert Monitoring and improving\n                  application performance. troubleshooting and fixing bugs.\n                </p>\n                <footer className=\"under\">\n                  <span className=\"time\">part time</span>\n                  <span className=\"level\">junior level</span>\n                </footer>\n                <Link to=\"/job-describtion\" className=\"read\">\n                  read more\n                </Link>\n              </div>\n            </div>\n          </article>\n          <article>\n            <form\n              className=\"form contact-form\"\n              // // action=\"https://formspree.io/f/moqywloj\"\n              // // method=\"POST\"\n              // onSubmit={handleSubmit(onSubmit)}\n              // action=\"https://getform.io/f/c04a2e4c-6d7b-48be-85e4-f4d4496aca5f\"\n              // method=\"POST\"\n              // enctype=\"multipart/form-data\"\n              action=\"POST\"\n              data-netlify=\"true\"\n            >\n              <div className=\"form-row\">\n                <label htmlFor=\"name\">your name</label>\n                <input\n                  required\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  {...register(\"name\")}\n                />\n                <p style={{ color: \"red\" }}>{errors.name?.message}</p>\n              </div>\n              <div className=\"form-row\">\n                <label htmlFor=\"email\">your email</label>\n                <input\n                  required\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  {...register(\"email\")}\n                />\n                <p style={{ color: \"red\" }}>{errors.email?.message}</p>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"file\">upload your CV</label>\n                <input\n                  required\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"file\"\n                  {...register(\"file\")}\n                  title=\"select a file\"\n                />\n                <p style={{ color: \"red\" }}>{errors.file?.message}</p>\n              </div>\n              <div className=\"form-row\"></div>\n              <div className=\"form-row\">\n                <Selector {...register(\"select\")} />\n                <p style={{ color: \"red\" }}>{errors.select?.message}</p>\n              </div>\n              <div className=\"form-row\">\n                <control>Level of experience with React.js</control>\n                <select\n                  as=\"select\"\n                  custom\n                  style={{ width: \"100%\" }}\n                  name=\"level of experience\"\n                >\n                  <option>Beginner</option>\n                  <option>Intermediate</option>\n                  <option>Expert</option>\n                </select>\n              </div>\n              <div className=\"form-row\">\n                <control>years of experience</control>\n                <select\n                  as=\"select\"\n                  custom\n                  style={{ width: \"100%\" }}\n                  name=\"years of experience\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </select>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"message\">Tell Us about yourself</label>\n                <textarea\n                  placeholder=\"tell us about yourself\"\n                  name=\"message\"\n                  id=\"message\"\n                  {...register(\"msg\")}\n                ></textarea>\n                <p style={{ color: \"red\" }}>{errors.msg?.message}</p>\n              </div>\n              <button type=\"submit\" className=\"btn block\">\n                submit\n              </button>\n            </form>\n          </article>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport default Contact\n"],"sourceRoot":""}